<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{AAE04020-C53B-4F59-B3EA-A2123CC6BDF2}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CmdCalculator</RootNamespace>
    <AssemblyName>CmdCalculator</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Practices.ServiceLocation, Version=1.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\CommonServiceLocator.1.3\lib\portable-net4+sl5+netcore45+wpa81+wp8\Microsoft.Practices.ServiceLocation.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Practices.Unity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f, processorArchitecture=MSIL">
      <HintPath>..\packages\Unity.4.0.1\lib\net45\Microsoft.Practices.Unity.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Practices.Unity.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f, processorArchitecture=MSIL">
      <HintPath>..\packages\Unity.4.0.1\lib\net45\Microsoft.Practices.Unity.Configuration.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Practices.Unity.RegistrationByConvention, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f, processorArchitecture=MSIL">
      <HintPath>..\packages\Unity.4.0.1\lib\net45\Microsoft.Practices.Unity.RegistrationByConvention.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="BasicCalculator.cs" />
    <Compile Include="Evaluations\BinaryExpressionEvaluatorBase.cs" />
    <Compile Include="Evaluations\BracketsEvaluator.cs" />
    <Compile Include="Evaluations\BasicEvaluationVisitor.cs" />
    <Compile Include="Evaluations\EvaluationVisitorFactory.cs" />
    <Compile Include="Interfaces\Evaluations\IExpressionEvaluatorProvider.cs" />
    <Compile Include="Interfaces\Evaluations\IEvaluationVisitor.cs" />
    <Compile Include="Interfaces\Evaluations\IEvaluationVisitorFactory.cs" />
    <Compile Include="Evaluations\IntegerAdditionEvaluator.cs" />
    <Compile Include="Evaluations\IntegerDivisionEvaluator.cs" />
    <Compile Include="Evaluations\IntegerEvaluatorProvider.cs" />
    <Compile Include="Evaluations\IntegerMultiplicationEvaluator.cs" />
    <Compile Include="Evaluations\IntegerSubstractionEvaluator.cs" />
    <Compile Include="Evaluations\LiteralExpressionEvaluatorBase.cs" />
    <Compile Include="Evaluations\IntegerLiteralExpressionEvaluator.cs" />
    <Compile Include="Evaluations\Exceptions\MissingEvaluatorException.cs" />
    <Compile Include="Evaluations\UnaryExpressionEvaluatorBase.cs" />
    <Compile Include="Exceptions\CalculatorException.cs" />
    <Compile Include="Expressions\BinaryOpExpression.cs" />
    <Compile Include="Interfaces\Expressions\ILiteralExpression.cs" />
    <Compile Include="Expressions\LiteralExpression.cs" />
    <Compile Include="Expressions\BracketOpExpression.cs" />
    <Compile Include="Extensions\TokenCollectionExtensions.cs" />
    <Compile Include="Interfaces\Evaluations\IExpressionEvaluator.cs" />
    <Compile Include="BasicCalcualtorFactory.cs" />
    <Compile Include="Interfaces\Operators\IOperator.cs" />
    <Compile Include="Operators\AdditionOperator.cs" />
    <Compile Include="Operators\ClosingBracketOperator.cs" />
    <Compile Include="Operators\DivisionOperator.cs" />
    <Compile Include="Operators\MultiplicationOperator.cs" />
    <Compile Include="Operators\OpeningBracketOperator.cs" />
    <Compile Include="Operators\SubtractionOperator.cs" />
    <Compile Include="Parsers\DefaultExpressionParsersProvider.cs" />
    <Compile Include="Interfaces\Expressions\IBinaryOpExpression.cs" />
    <Compile Include="Interfaces\Expressions\IOperatorExpression.cs" />
    <Compile Include="Interfaces\Expressions\IUnaryOpExpression.cs" />
    <Compile Include="Interfaces\ICalcualtorFactory.cs" />
    <Compile Include="Interfaces\ICalculator.cs" />
    <Compile Include="Interfaces\Expressions\IExpression.cs" />
    <Compile Include="Interfaces\Parsers\IExpressionParsersProvider.cs" />
    <Compile Include="Interfaces\Parsers\IExpressionParser.cs" />
    <Compile Include="Parsers\AllExpressionsParser.cs" />
    <Compile Include="Parsers\BinaryMathOpExpressionParser.cs" />
    <Compile Include="Parsers\BracketsExpressionParser.cs" />
    <Compile Include="Interfaces\Parsers\ITopExpressionParser.cs" />
    <Compile Include="Parsers\LiteralParser.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Tokenization\BasicTokenizer.cs" />
    <Compile Include="Tokenization\BasicTokenizerFactory.cs" />
    <Compile Include="Tokenization\CharTokenParsersProvider.cs" />
    <Compile Include="Tokenization\Tokens\BinaryMathOpToken.cs" />
    <Compile Include="Tokenization\Tokens\CloseBracketsToken.cs" />
    <Compile Include="Interfaces\Tokens\IInputPeeker.cs" />
    <Compile Include="Interfaces\Tokens\IInputReader.cs" />
    <Compile Include="Interfaces\Tokens\IInputReaderFactory.cs" />
    <Compile Include="Interfaces\Tokens\IToken.cs" />
    <Compile Include="Interfaces\Tokens\ITokenizer.cs" />
    <Compile Include="Interfaces\Tokens\ITokenizerFactory.cs" />
    <Compile Include="Interfaces\Tokens\ITokenParser.cs" />
    <Compile Include="Interfaces\Tokens\ITokenParsersProvider.cs" />
    <Compile Include="Tokenization\Exceptions\MissingReaderException.cs" />
    <Compile Include="Interfaces\Tokens\IOperatorToken.cs" />
    <Compile Include="Tokenization\Tokens\LiteralToken.cs" />
    <Compile Include="Tokenization\NumberTokenParser.cs" />
    <Compile Include="Tokenization\Tokens\OpenBracketsToken.cs" />
    <Compile Include="Tokenization\OperatorTokenParser.cs" />
    <Compile Include="Tokenization\SpaceTokenParser.cs" />
    <Compile Include="Tokenization\StringInputReader.cs" />
    <Compile Include="Tokenization\StringInputReaderFactory.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>